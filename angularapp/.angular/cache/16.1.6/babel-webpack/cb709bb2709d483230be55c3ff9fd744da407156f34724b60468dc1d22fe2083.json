{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass CurrencyConverterPipe {\n  constructor() {\n    this.exchangeRates = {\n      USD: 1.126735,\n      GBP: 0.876893,\n      INR: 79.677056\n    };\n  }\n  transform(value, fromCurrency = 'USD', toCurrency = 'USD', amount = 0) {\n    if (!this.exchangeRates[fromCurrency] || !this.exchangeRates[toCurrency]) {\n      throw new Error(`Invalid currency ${fromCurrency} or ${toCurrency}`);\n    }\n    const fromRate = this.exchangeRates[fromCurrency];\n    const toRate = this.exchangeRates[toCurrency];\n    const convertedAmount = amount * toRate / fromRate;\n    return convertedAmount;\n  }\n}\nCurrencyConverterPipe.ɵfac = function CurrencyConverterPipe_Factory(t) {\n  return new (t || CurrencyConverterPipe)();\n};\nCurrencyConverterPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"currencyConverter\",\n  type: CurrencyConverterPipe,\n  pure: true\n});\nexport { CurrencyConverterPipe };","map":{"version":3,"names":["CurrencyConverterPipe","constructor","exchangeRates","USD","GBP","INR","transform","value","fromCurrency","toCurrency","amount","Error","fromRate","toRate","convertedAmount","pure"],"sources":["/home/coder/project/workspace/angularapp/src/app/MyComponents/Pipe/currency-converter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'currencyConverter',\n  })\n  export class CurrencyConverterPipe implements PipeTransform {\n    exchangeRates: { [key: string]: number } = {\n        USD: 1.126735,\n            GBP: 0.876893,\n                INR: 79.677056,\n                  };\n\n                    transform(\n                        value: any,\n                            fromCurrency: string = 'USD',\n                                toCurrency: string = 'USD',\n                                    amount: number = 0\n                                      ): any {\n                                          if (!this.exchangeRates[fromCurrency] || !this.exchangeRates[toCurrency]) {\n                                                throw new Error(`Invalid currency ${fromCurrency} or ${toCurrency}`);\n                                                    }\n\n                                                        const fromRate = this.exchangeRates[fromCurrency];\n                                                            const toRate = this.exchangeRates[toCurrency];\n                                                                const convertedAmount = (amount * toRate) / fromRate;\n                                                                    return convertedAmount;\n                                                                      }\n                                                                      }"],"mappings":";AAEA,MAGeA,qBAAqB;EAHpCC,YAAA;IAII,KAAAC,aAAa,GAA8B;MACvCC,GAAG,EAAE,QAAQ;MACTC,GAAG,EAAE,QAAQ;MACTC,GAAG,EAAE;KACF;;EAECC,SAASA,CACLC,KAAU,EACNC,YAAA,GAAuB,KAAK,EACxBC,UAAA,GAAqB,KAAK,EACtBC,MAAA,GAAiB,CAAC;IAEZ,IAAI,CAAC,IAAI,CAACR,aAAa,CAACM,YAAY,CAAC,IAAI,CAAC,IAAI,CAACN,aAAa,CAACO,UAAU,CAAC,EAAE;MACpE,MAAM,IAAIE,KAAK,CAAC,oBAAoBH,YAAY,OAAOC,UAAU,EAAE,CAAC;;IAG5D,MAAMG,QAAQ,GAAG,IAAI,CAACV,aAAa,CAACM,YAAY,CAAC;IAC7C,MAAMK,MAAM,GAAG,IAAI,CAACX,aAAa,CAACO,UAAU,CAAC;IACzC,MAAMK,eAAe,GAAIJ,MAAM,GAAGG,MAAM,GAAID,QAAQ;IAChD,OAAOE,eAAe;EACpB;;AArBvDd,qBAAqB,C;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB,C;;QAArBA,qBAAqB;EAAAe,IAAA;AAAA;SAArBf,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}